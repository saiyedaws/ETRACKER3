C:\Windows\System32\taskkill.exe /F /IM chrome.exe
-------------------
Make docker container
------------------------

docker run -p 8501:8501 \
--mount type=bind,\source=/home/leaksmith/Desktop/resnet,target=/models/resnet \
-e MODEL_NAME=resnet -t tensorflow/serving &



------------------------
machine ip 
----------------------
docker-machine ip default

-> 192.168.99.100





-----------------
Curl

curl -X POST \
  http://127.0.0.1:8080/v1/models/ebayOCR:predict \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
  -d '{
  "signature_name": "serving_default",
  "inputs": {
     	"input": { "b64": "/9j/4AAQ==" }
  }
}'

------------------

curl -X POST \
  http://127.0.0.1:8501/v1/models/resnet:predict \
  -H 'cache-control: no-cache' \
  -H 'content-type: application/json' \
  -d '{
  "signature_name": "serving_default",
  "inputs": {
     	"input": { "b64": "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" }
  }
}'
















-----------------

// get all docker containers
docker ps -a


//stop container
docker stop {container}


//remove container
docker container rm {container}
